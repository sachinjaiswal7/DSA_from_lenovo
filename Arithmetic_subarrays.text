class Solution {
    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) {
        List<Boolean>ans = new ArrayList<>();
       for(int i =0;i<l.length;i++){
           PriorityQueue<Integer>pq = new PriorityQueue<>();
           for(int j = l[i];j<=r[i];j++){
               pq.add(nums[j]);
           }
           
           int diff = pq.poll();
           int prev = pq.poll();
           diff = prev-diff;
           boolean check = true;
           while(!pq.isEmpty()){
               int num  = pq.poll();
               if(num-prev != diff){
                   check = false;
                   break;
               }
               prev  = num;
           }
           ans.add(check);
           
       }
        return ans;
    }
}